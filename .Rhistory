library(ggplot2)
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .55, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "white") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .55, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
nr <- nrow(myDf)
N <- sum(myDf$count)
Df_ticks <- data.frame(xtick0 = rep(nr +.55, 11), xtick1 = rep(nr +.59, 11),
ytick = seq(0, N, N/10))
y2 <- c("  0%", " 10%", " 20%", " 30%", " 40%", " 50%", " 60%", " 70%", " 80%", " 90%", "100%")
library(ggplot2)
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .55, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "white") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .55, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .55, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02) +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .55, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .55, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "transparet") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .55, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .55, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "transparent") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .55, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .55, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "transparent") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .58, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .55, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "transparent") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .57, xend = nr + .55, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .55, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "transparent") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .52, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .60, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "transparent") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .52, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
g <- ggplot(myDf, aes(x=myDf$Error)) +
geom_bar(aes(y=myDf$count, fill=myDf$Error),  stat="identity") +
geom_point(aes(y=myDf$cumulative), color = "slateblue1", pch=16, size=2) +
geom_path(aes(y=myDf$cumulative, group=1), colour="slateblue1", lty=3, size=0.9) +
theme(axis.text.x = element_text(angle=90, vjust=0.6)) +
labs(title = "Diagrama de Pareto", subtitle = "Reprocesos de Pinturas PPG, Itagui", x = 'Error', y = 'Count')+
theme(legend.position = "none")+
annotate("rect", xmin = nr + .8, xmax = nr + 1,
ymin = -.02 * N, ymax = N * 1.02, fill = "transparent") +
annotate("text", x = nr + .8, y = seq(0, N, N/10), label = y2, size = 3.5) +
geom_segment(x = nr + .55, xend = nr + .52, y = -.02 * N, yend = N * 1.02, color = "grey50") +
geom_segment(data = Df_ticks, aes(x = xtick0, y = ytick, xend = xtick1, yend = ytick))
g <- g + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.5, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.5, color="#1f3652"))
g
m <- ggplot(dt, aes(x = SDp, fill = Material)) + geom_density(alpha = 0.3)
m#############################################################################################
m <- ggplot(dt, aes(x = SDp, fill = Material)) + geom_density(alpha = 0.4)
m
m <- ggplot(dt, aes(x = SDp, fill = Material)) + geom_density(alpha = 0.4)+
labs(title = "Desviación porcentual Pesado por material", subtitle = "Proceso de alistamiento PPG. Itagüi", y = 'Desviación porcentual [%]')
m <- m + theme (text = element_text(size=8)) +
hjust = 0.2, color="#1f3652", face = "bold")) +
m
m <- ggplot(dt, aes(x = SDp, fill = Material)) + geom_density(alpha = 0.4)+
labs(title = "Desviación porcentual Pesado por material", subtitle = "Proceso de alistamiento PPG. Itagüi", y = 'Desviación porcentual [%]')
m <- m + theme (text = element_text(size=8)) +
hjust = 0.2, color="#1f3652", face = "bold")) +
m
m <- ggplot(dt, aes(x = SDp, fill = Material)) + geom_density(alpha = 0.4)+
labs(title = "Desviación porcentual Pesado por material", subtitle = "Proceso de alistamiento PPG. Itagüi", y = 'Desviación porcentual [%]')
m <- m + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.2, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.8, color="#1f3652"))
m
m <- ggplot(dt, aes(x = SDp, fill = Material)) + geom_density(alpha = 0.4)+
labs(title = "Desviación porcentual Pesado por material",
subtitle = "Proceso de alistamiento PPG. Itagüi", x = 'Desviación porcentual [%]')
m <- m + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.2, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.8, color="#1f3652"))
m
m <- m + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.2, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.6, color="#1f3652"))
m
m <- m + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.3, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.6, color="#1f3652"))
m
m <- m + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.3, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.4, color="#1f3652"))
m
m <- m + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.8, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.4, color="#1f3652"))
m
m <- m + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 2, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.3, color="#1f3652"))
m
m <- ggplot(dt, aes(x = SDp, fill = Material)) + geom_density(alpha = 0.4)+
labs(title = "Desviación porcentual Pesado por material",
subtitle = "Proceso de alistamiento PPG. Itagüi", x = 'Desviación porcentual [%]')
m <- m + theme (text = element_text(size=8)) +
theme (plot.title = element_text(family="Comic Sans MS", size=rel(2), vjust=0,
hjust = 0.3, color="#1f3652", face = "bold")) +
theme(plot.subtitle = element_text(family="Comic Sans MS", size=rel(1.5), vjust=0,
hjust = 0.4, color="#1f3652"))
m
58+28+24
read.csv("Desktop/Ejercicio Tarros de Plastico - Hoja 1.csv")
df <- read.csv("Desktop/Ejercicio Tarros de Plastico - Hoja 1.csv")
head(df,6)
install.packages("qcc")
library(qcc)
View(df)
df
?qcc
df <- df[,2:7 ]
df
col.names(df<- c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4", "Muestra 5"))
colnames(df<- c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4", "Muestra 5"))
df
library(qcc)
df <- read.csv("Desktop/Ejercicio Tarros de Plastico - Hoja 1.csv")
df
df <- df[,3:7 ]
colnames(df) <- c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4", "Muestra 5"))
df
colnames(df) <- c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4", "Muestra 5")
df
rangos <- qcc(data = df, type = "R")
Medias <- qcc(data = df, type = "xbar")
sd <- qcc(data = df, type = "sd")
getwd()
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("Desktop/Ejercicio Tarros de Plastico - Hoja 1.csv")
df
df <- read.csv("Desktop/Ejercicio Tarros de Plastico - Hoja 1.csv")
df <- df[,3:7 ]
colnames(df) <- c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4", "Muestra 5")
df
df <- df[-1,]
colnames(df) <- c("Muestra 1", "Muestra 2", "Muestra 3", "Muestra 4", "Muestra 5")
df
library(qcc)
rangos <- qcc(data = df, type = "R")
Medias <- qcc(data = df, type = "xbar")
library(qcc)
Medias <- qcc(data = df, type = "xbar")
rangos <- qcc(data = df, type = "R")
Causa <- c("Error Digitación", "Mala limpieza de agitador", "Error de Marcado MP",
"Tiempo de Agitación insuficiente", "Tiempo de reposo de materia prima")
NPR <- c(360, 108, 48, 280, 105)
myDf <- data.frame(count=NPR,
Error=Causa,
stringsAsFactors = FALSE)
myDf
360/9
40/6
40/7
40/8
108/9
280/9
280/8
280/8
105/9
105/8
105/7
install.packages("labdsv")
# Aqui se definen los valores de tamano muestral n
# Luego se define el numero de repeticiones
n <- seq(from=10, to=250, by=20)
nrep <- 1000
values <- expand.grid(n=n)
values
apply(values, 1, simul)
dt <- read.table('simul_without_covIW2.txt',
col.names=c('mu', 'sigma', 'n'))
require(dplyr)
# Mean
res <- dt %>% group_by(n) %>% summarise(mu=mean(mu),
sigma=mean(sigma))
# The parameters ----------------------------------------------------------
##### IW
true_mu    <- 5
true_sigma <- 2.5
##### LW
true_mu    <- 0.0
true_sigma <- 1.5
# Funcion para obtener mu_hat y sigma_hat para un valor fijo de n
simul_one <- function(size) {
y <- rIW(n=size, mu=true_mu, sigma=true_sigma)
mod <- NULL
mod <- gamlss(y~1, sigma.fo=~1, family='IW',
control=gamlss.control(n.cyc=2500, trace=FALSE))
res <- c(exp(coef(mod, what='mu')), exp(coef(mod, what='sigma')))
res
}
# Super function to simulate and write the estimated parameters
simul <- function(n) {
result <- t(replicate(n=nrep, expr=simul_one(size=n)))
result <- cbind(result, n)
write(x=t(result), file='simul_without_cov.txt',
ncol=3, append=TRUE)
}
# Aqui se definen los valores de tamano muestral n
# Luego se define el numero de repeticiones
n <- seq(from=10, to=250, by=20)
nrep <- 1000
values <- expand.grid(n=n)
values
apply(values, 1, simul)
require(RelDists)
require(gamlss)
# The parameters ----------------------------------------------------------
##### IW
true_mu    <- 5
true_sigma <- 2.5
##### LW
true_mu    <- 0.0
true_sigma <- 1.5
# Funcion para obtener mu_hat y sigma_hat para un valor fijo de n
simul_one <- function(size) {
y <- rIW(n=size, mu=true_mu, sigma=true_sigma)
mod <- NULL
mod <- gamlss(y~1, sigma.fo=~1, family='IW',
control=gamlss.control(n.cyc=2500, trace=FALSE))
res <- c(exp(coef(mod, what='mu')), exp(coef(mod, what='sigma')))
res
}
# Super function to simulate and write the estimated parameters
simul <- function(n) {
result <- t(replicate(n=nrep, expr=simul_one(size=n)))
result <- cbind(result, n)
write(x=t(result), file='simul_without_cov.txt',
ncol=3, append=TRUE)
}
# Aqui se definen los valores de tamano muestral n
# Luego se define el numero de repeticiones
n <- seq(from=10, to=250, by=20)
nrep <- 1000
values <- expand.grid(n=n)
values
apply(values, 1, simul)
# The parameters ----------------------------------------------------------
##### IW
true_mu    <- 5
true_sigma <- 2.5
# Funcion para obtener mu_hat y sigma_hat para un valor fijo de n
simul_one <- function(size) {
y <- rIW(n=size, mu=true_mu, sigma=true_sigma)
mod <- NULL
mod <- gamlss(y~1, sigma.fo=~1, family='IW',
control=gamlss.control(n.cyc=2500, trace=FALSE))
res <- c(exp(coef(mod, what='mu')), exp(coef(mod, what='sigma')))
res
}
# Super function to simulate and write the estimated parameters
simul <- function(n) {
result <- t(replicate(n=nrep, expr=simul_one(size=n)))
result <- cbind(result, n)
write(x=t(result), file='simul_without_cov.txt',
ncol=3, append=TRUE)
}
# Aqui se definen los valores de tamano muestral n
# Luego se define el numero de repeticiones
n <- seq(from=10, to=250, by=20)
nrep <- 1000
values <- expand.grid(n=n)
values
apply(values, 1, simul)
dt <- read.table('simul_without_covIW2.txt',
col.names=c('mu', 'sigma', 'n'))
require(dplyr)
# Mean
res <- dt %>% group_by(n) %>% summarise(mu=mean(mu),
sigma=mean(sigma))
pdf('mean_simul1.pdf', width=8, height=4)
par(mfrow=c(1, 2))
with(res, plot(x=n, y=mu,
type='b', las=1, ylab='Mean value', main=expression(mu)))
abline(h=true_mu, lty='dashed', col='red')
with(res, plot(x=n, y=sigma,
type='b', las=1, ylab='Mean value', main=expression(sigma)))
abline(h=true_sigma, lty='dashed', col='red')
dev.off()
# Aqui se definen los valores de tamano muestral n
# Luego se define el numero de repeticiones
n <- seq(from=10, to=250, by=20)
nrep <- 1000
values <- expand.grid(n=n)
values
apply(values, 1, simul)
# Aqui se definen los valores de tamano muestral n
# Luego se define el numero de repeticiones
n <- seq(from=20, to=200, by=20)
nrep <- 1000
values <- expand.grid(n=n)
values
apply(values, 1, simul)
getwd()
setwd("Documents/TtoBcoData-R/")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
head(cars)
kable( cars , caption = "Datos"
, align = c('l', 'l', 'c')
, digits = 1
, format.args = list( decimal.mark = ",")
)
kable( data=cars , caption = "Datos"
, align = c('l', 'l', 'c')
, digits = 1
, format.args = list( decimal.mark = ",")
)
library(knitr)
kable( data=cars , caption = "Datos"
, align = c('l', 'l', 'c')
, digits = 1
, format.args = list( decimal.mark = ",")
)
class(cars)
kable( data=cars , caption = "Datos"
, align = c('l', 'c')
, digits = 1
, format.args = list( decimal.mark = ",")
)
kable( data=cars , caption = "Datos"
, align = c('l', 'c')
, format.args = list( decimal.mark = ",")
)
library(knitr)
kable( data=cars , caption = "Datos"
, align = c('l', 'c')
, format.args = list( decimal.mark = ",")
)
library(knitr)
kable( data=cars , caption = "Datos"
, align = c('l', 'c')
)
library(knitr)
kable( data=cars , caption = "Datos",
align = c('l', 'c')
)
?kable
kable( x=cars , caption = "Datos",
align = c('l', 'c')
)
kable( x=cars , caption = "Datos"
, align = c('l', 'c')
, digits = 1
, format.args = list( decimal.mark = ",")
)
kable( x=iris , caption = "Datos"
, align = c('l', 'c')
, digits = 1
, format.args = list( decimal.mark = ",")
)
kable( x=iris[1:20,] , caption = "Datos"
, align = c('l', 'c')
, digits = 1
, format.args = list( decimal.mark = ",")
)
